{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","when","sweet","sour","ssapi","endpoint","token","givefeedback","x","y","Date","now","xhr","XMLHttpRequest","console","log","open","setRequestHeader","onreadystatechange","this","readyState","DONE","status","send","react_default","a","createElement","className","id","onClick","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bff1b018.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n\n/* eslint-disable require-jsdoc */\nvar when\nvar sweet\nvar sour\nconst ssapi = { endpoint: 'https://43aods3klff3nofktl2qh2flvq.appsync-api.ap-southeast-2.amazonaws.com/graphql', \n  token: 'da2-uki3whcfezh5fdxbu274svnx5a' }\n\n// eslint-disable-next-line no-unused-vars\nfunction givefeedback (x, y) {\n  when = Date.now()\n  sweet = x\n  sour = y\n  var xhr = new XMLHttpRequest()\n  console.log('when=' + when, 'sweet=' + x, 'sour=' + y)\n\n  xhr.open('POST', ssapi.endpoint, true)\n  xhr.setRequestHeader('x-api-key', ssapi.token)\n  xhr.onreadystatechange = function () { // Call a function when the state changes.\n    if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {\n      // Request finished. Do processing here.\n      console.log('status', this.status)\n    }\n  }\n  // eslint-disable-next-line no-useless-escape\n  xhr.send('{\\\"query\\\":\\\"mutation createFeedback($createfeedbackinput: CreateFeedbackInput!) {\\\\n  createFeedback(input: $createfeedbackinput) {\\\\n    id\\\\n    whenclick\\\\n    sweet\\\\n    sour\\\\n  }\\\\n}\\\\n\\\\n\\\\n\",\\\"variables\\\":{\\\"createfeedbackinput\\\":{\\\"id\\\":\\\"not-used\\\",\\\"whenclick\\\":' + when + ',\\\"sweet\\\":' + sweet + ',\\\"sour\\\":' + sour + '}},\\\"operationName\\\":\\\"createFeedback\\\"}')\n}\n\n\n\n\n\n\n  return (\n    <div className=\"App\">\n     \n  <div className=\"grid-container\">\n    <div className=\"title\">\n      <h2>糖醋</h2>\n    </div>\n    <div className=\"yaxis\">\n      <i className='fas fa-angle-double-left'></i>\n      SOUR\n      <i className='fas fa-angle-double-left'></i>\n    </div>\n    <div className=\"xaxis\">\n      <i className='fas fa-angle-double-right'></i>\n      SWEET\n      <i className='fas fa-angle-double-right'></i>\n\n    </div>\n    <div className=\"buttons\">\n\n      <div className=\"wrapper\">\n        <div className=\"box\" id=\"box1\" onClick={() => {givefeedback(1,5)}}>\n          <i className='far fa-grin-squint'></i>\n        </div>\n        <div className=\"box\" id=\"box2\" onClick={() => {givefeedback(1,4)}}>\n          <i className='far fa-grin'></i>\n        </div>\n        <div className=\"box\" id=\"box3\" onClick={() => {givefeedback(1,3)}}>\n          <i className='far fa-meh'></i>\n        </div>\n        <div className=\"box\" id=\"box4\" onClick={() => {givefeedback(1,2)}}>\n          <i className='far fa-frown'></i>\n        </div>\n        <div className=\"box\" id=\"box5\" onClick={() => {givefeedback(1,1)}}>\n          <i className='far fa-angry'></i>\n        </div>\n        <div className=\"box\" id=\"box6\" onClick={() => {givefeedback(2,5)}}>\n          <i className='far fa-grin-squint'></i>\n        </div>\n        <div className=\"box\" id=\"box7\" onClick={() => {givefeedback(2,4)}}>\n          <i className='far fa-grin'></i>\n        </div>\n        <div className=\"box\" id=\"box8\" onClick={() => {givefeedback(2,3)}}>\n          <i className='far fa-meh'></i>\n        </div>\n        <div className=\"box\" id=\"box9\" onClick={() => {givefeedback(2,2)}}>\n          <i className='far fa-frown'></i>\n        </div>\n        <div className=\"box\" id=\"box10\" onClick={() => {givefeedback(2,1)}}>\n          <i className='far fa-frown'></i>\n        </div>\n        <div className=\"box\" id=\"box11\" onClick={() => {givefeedback(3,5)}}>\n          <i className='far fa-grin-squint'></i>\n        </div>\n        <div className=\"box\" id=\"box12\" onClick={() => {givefeedback(3,4)}}>\n          <i className='far fa-grin'></i>\n        </div>\n        <div className=\"box\" id=\"box13\" onClick={() => {givefeedback(3,3)}}>\n          <i className='far fa-meh'></i>\n        </div>\n        <div className=\"box\" id=\"box14\" onClick={() => {givefeedback(3,2)}}>\n          <i className='far fa-meh'></i>\n        </div>\n        <div className=\"box\" id=\"box15\" onClick={() => {givefeedback(3,1)}}>\n          <i className='far fa-meh'></i>\n        </div>\n        <div className=\"box\" id=\"box16\" onClick={() => {givefeedback(4,5)}}>\n          <i className='far fa-grin-squint'></i>\n        </div>\n        <div className=\"box\" id=\"box17\" onClick={() => {givefeedback(4,4)}}>\n          <i className='far fa-grin'></i>\n        </div>\n        <div className=\"box\" id=\"box18\" onClick={() => {givefeedback(4,3)}}>\n          <i className='far fa-grin'></i>\n        </div>\n        <div className=\"box\" id=\"box19\" onClick={() => {givefeedback(4,2)}}>\n          <i className='far fa-grin'></i>\n        </div>\n        <div className=\"box\" id=\"box20\" onClick={() => {givefeedback(4,1)}}>\n          <i className='far fa-grin'></i>\n        </div>\n        <div className=\"box\" id=\"box21\" onClick={() => {givefeedback(5,5)}}>\n          <i className='far fa-grin-hearts'></i>\n        </div>\n        <div className=\"box\" id=\"box22\" onClick={() => {givefeedback(5,4)}}>\n          <i className='far fa-grin-squint'></i>\n        </div>\n        <div className=\"box\" id=\"box23\" onClick={() => {givefeedback(5,3)}}>\n          <i className='far fa-grin-squint'></i>\n        </div>\n        <div className=\"box\" id=\"box24\" onClick={() => {givefeedback(5,2)}}>\n          <i className='far fa-grin-squint'></i>\n        </div>\n        <div className=\"box\" id=\"box25\" onClick={() => {givefeedback(5,1)}}>\n          <i className='far fa-grin-squint'></i>\n        </div>\n\n      </div>\n\n\n    </div>\n    <div className=\"footer\">\n\n      <a href=\"result.html\">\n        See the result here <i className='fas fa-chart-area'></i>\n      </a>\n    </div>\n    <div className=\"bookend\"></div>\n  </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}